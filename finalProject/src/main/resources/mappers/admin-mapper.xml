<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">

	<resultMap type="User" id="user_rm">
		<!-- DB의 기본 키(복합키면 여러 개 작성) -->
		<id property="userNo" column="USER_NO" />

		<!-- DB의 일반 컬럼들 -->
		<result property="userName" column="USER_NAME" />
		<result property="userBirthDate" column="USER_BIRTH" />
		<result property="userGender" column="USER_GENDER" />
		<result property="userBirthDate" column="USER_BIRTH" />
		<result property="userAddress" column="USER_ADDR" />
		
		<result property="userId" column="USER_ID" />
		<result property="userPw" column="USER_PW" />
		<result property="userNickname" column="USER_NICKNAME" />
		<result property="userEmail" column="USER_EMAIL" />
		
		<result property="userTel" column="USER_TEL" />

		<result property="profileImage" column="PROFILE_IMG" />
		<result property="enrollDate" column="ENROLL_DATE" />
		<result property="userDeleteFlag" column="USER_DEL_FL" />
		<result property="authority" column="AUTHORITY" />
		
		
		
	</resultMap>
	
	
	
	<!-- 숙소 관련 -->
	<resultMap type="Owner" id="owner_rm">
		<!-- 사업자 -->
		<id property="bossNo" column="BOSS_NO"/>
		
		<result property="bossAccount" column="BOSS_ACCOUNT"/>
		<result property="userNo" column="USER_NO"/>
		<result property="userId" column="USER_ID"/>
		<result property="userName" column="USER_NAME"/>
		<result property="userTel" column="USER_TEL"/>
		<result property="userEmail" column="USER_EMAIL"/>
		<result property="userBirthDate" column="USER_BIRTH"/>
		<result property="userDeleteFlag" column="USER_DEL_FL"/>
		
		<!-- 숙소정보 -->
		<result property="accNo" column="ACC_NO"/>
		<result property="accName" column="ACC_NAME"/>
		<result property="accTel" column="ACC_TEL"/>
		<result property="accAddr" column="ACC_ADDR"/>
		<result property="accStFl" column="ACC_ST_FL"/>
		<result property="accCategory" column="ACC_CATEGORY"/>
		<result property="openDate" column="OPEN_DATE"/>
		
		<result property="totalRoomCount" column="TOTAL_ROOM_COUNT"/>
		<result property="standardRoom" column="STANDARD_ROOM"/>
		<result property="deluxeRoom" column="DELUXE_ROOM"/>
		<result property="sweetRoom" column="SWEET_ROOM"/>		
		
		
	</resultMap>
	
	<resultMap type="ACCGradeOwner" id="accGrade_rm">
	
		<id property="accCode" column="ACC_CODE"/>
		<result property="accType" column="ACC_TYPE"/>
		<result property="roomPrice" column="ROOM_PRICE"/>
		<result property="roomCapacity" column="ROOM_CAPACITY"/>
		<result property="accNo" column="ACC_NO"/>

		<result property="standardRoom" column="STANDARD_ROOM"/>
		<result property="deluxeRoom" column="DELUXE_ROOM"/>
		<result property="sweetRoom" column="SWEET_ROOM"/>
	</resultMap>
	
	
	
	
	<!-- 관리자페이지 탈퇴안한 회원 수 -->
	<select id="selectUserListCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) FROM "USER" WHERE USER_DEL_FL = 'N'
	</select>
	
	<!-- 관리자페이지 탈퇴안한 회원목록 -->
	<select id="selectUserAllList" resultMap="user_rm">
		SELECT USER_NO, USER_NAME, USER_BIRTH,USER_GENDER, USER_ADDR,USER_ID,USER_NICKNAME,USER_TEL,USER_EMAIL,AUTHORITY  
		FROM "USER" WHERE USER_DEL_FL = #{state}
	</select>
	
	<!--  관리자페이지 회원 수 (검색) -->
	<select id="selectUserListCountSearch" resultType="_int">
		SELECT COUNT(*) FROM "USER"
		WHERE USER_DEL_FL = 'N'
		<if test='users=="0"'>
			AND USER_NAME LIKE '%${query}%'
		</if>
		<if test='users=="1"'>
			AND AUTHORITY = 1 AND USER_NAME LIKE '%${query}%'
		</if> 
		<if test='users=="2"'>
			AND AUTHORITY = 2 AND USER_NAME LIKE '%${query}%'
		</if> 
		<if test='users=="3"'>
			AND AUTHORITY = 3 AND USER_NAME LIKE '%${query}%'
		</if> 
	</select>
	
	<!-- 관리자페이지 회원목록 (검색) -->
	<select id="selectUserAllListSearch" resultMap="user_rm">
		SELECT USER_NO, USER_NAME, USER_BIRTH,USER_GENDER, USER_ADDR,USER_ID,USER_NICKNAME,USER_TEL,USER_EMAIL,AUTHORITY  
		FROM "USER" WHERE USER_DEL_FL = 'N'
		<if test='users=="0"'>
			AND USER_NAME LIKE '%${query}%'
		</if>
		<if test='users=="1"'>
			AND AUTHORITY = 1 AND USER_NAME LIKE '%${query}%'
		</if> 
		<if test='users=="2"'>
			AND AUTHORITY = 2 AND USER_NAME LIKE '%${query}%'
		</if> 
		<if test='users=="3"'>
			AND AUTHORITY = 3 AND USER_NAME LIKE '%${query}%'
		</if> 
	</select>
	
	
	
	<!-- 관리자페이지 사업자 승인요청 목록 조회 -->
	<select id="selectAccPermitList" resultMap="owner_rm">
		SELECT A.ACC_NO, BOSS_NO, ACC_NAME, USER_NO, USER_ID, USER_NAME, USER_TEL, USER_EMAIL, USER_BIRTH, 
		    OPEN_DATE, ACC_ADDR, ACC_TEL, ACC_CATEGORY,ACC_ST_FL
		FROM ACC A
		JOIN BOSS USING(BOSS_NO)
		JOIN "USER" USING(USER_NO)
		WHERE USER_DEL_FL = 'N'
		AND ACC_ST_FL = 'R'
		ORDER BY A.ACC_NO DESC
	</select>
	
	
	<!-- 관리자 사업장 승인 요청 상태별 목록 조회 -->
	<select id="selectStateAccPermitList" parameterType="string" resultMap="owner_rm">
		SELECT A.ACC_NO, BOSS_NO, ACC_NAME, USER_NO, USER_ID, USER_NAME, USER_TEL, USER_EMAIL, USER_BIRTH, 
		    OPEN_DATE, ACC_ADDR, ACC_TEL, ACC_CATEGORY, ACC_ST_FL
		FROM ACC A
		JOIN BOSS USING(BOSS_NO)
		JOIN "USER" USING(USER_NO)
		WHERE USER_DEL_FL = 'N'
		<choose>
			<when test='state == "wait"'>
				AND ACC_ST_FL = 'R'
			</when>
			<when test='state == "accept"'>
				AND ACC_ST_FL = 'Y'
			</when>
		</choose>
		ORDER BY A.ACC_NO DESC
	</select>
	
	
	<!-- 사업자 승인 요청 -> 승인 -->
	<update id="updateAccStateFl">
		UPDATE ACC SET ACC_ST_FL = 'Y'
		WHERE ACC_NO = #{accNo}
	</update>
	
	<!-- 사업자 승인 요청 -> 거절 -->
	<delete id="deleteAccStateFl">
		DELETE FROM BOSS WHERE BOSS_NO = #{bossNo}
	</delete>
	
	<update id="updateUserState">
		UPDATE "USER" SET AUTHORITY = 1
		WHERE USER_NO = #{userNo}
	</update>
	
	
	<!-- 유저상세 -->
	<select id="selectuserDetail" resultMap="user_rm">
		SELECT * FROM "USER" WHERE USER_NO = #{userNo} AND USER_DEL_FL = 'N'
	</select>
	
	<!-- 회원탈퇴 -->
	<update id="deleteUser">
		UPDATE "USER" SET USER_DEL_FL = 'Y' WHERE USER_NO = #{userNo}
	</update>
	
	
	<!-- 요청대기중이 아닌 사업장 목록 개수  -->
	<select id="selectAccListCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) FROM "ACC" WHERE ACC_ST_FL != 'R'
	</select>
	
	<!-- 사업장 전체목록 (영업중, 휴업, 폐업) -->
	<select id="selectAccAllList" resultMap="owner_rm">
		SELECT ACC_NO, USER_NAME,ACC_NAME, ACC_TEL, ACC_ADDR, BOSS_NO, ACC_ST_FL 
		FROM "ACC" JOIN "BOSS" USING(BOSS_NO)
		JOIN "USER" USING(USER_NO)
		WHERE ACC_ST_FL != #{state}
	</select>
	
	<!-- 검색한 사업장 목록 수 조회 -->
	<select id="selectAccListCountSearch" resultType="_int">
		SELECT COUNT(*) FROM "ACC" WHERE ACC_ST_FL != 'R'
		<if test='accs=="0"'>
			AND ACC_NAME LIKE '%${query}%'
		</if>
		<if test='accs=="1"'>
			AND ACC_ST_FL = 'Y' AND ACC_NAME LIKE '%${query}%'
		</if> 
		<if test='accs=="2"'>
			AND ACC_ST_FL = 'N' AND ACC_NAME LIKE '%${query}%'
		</if> 
		<if test='accs=="3"'>
			AND ACC_ST_FL = 'C' AND ACC_NAME LIKE '%${query}%'
		</if>
	</select>
	
	<!-- 검색한 사업장 목록 조회 -->
	
	<select id="selectAccAllListSearch" resultMap="owner_rm">
		SELECT ACC_NO, USER_NAME,ACC_NAME, ACC_TEL, ACC_ADDR, BOSS_NO, ACC_ST_FL  
		FROM "ACC" 
		JOIN "BOSS" USING(BOSS_NO)
		JOIN "USER" USING(USER_NO)
		WHERE ACC_ST_FL != 'R'
		<if test='accs=="0"'>
			AND ACC_NAME LIKE '%${query}%'
		</if>
		<if test='accs=="1"'>
			AND ACC_ST_FL = 'Y' AND ACC_NAME LIKE '%${query}%'
		</if> 
		<if test='accs=="2"'>
			AND ACC_ST_FL = 'N' AND ACC_NAME LIKE '%${query}%'
		</if> 
		<if test='accs=="3"'>
			AND ACC_ST_FL = 'C' AND ACC_NAME LIKE '%${query}%'
		</if>
	</select>
	
	<!-- 사업장 상세 -->
	<select id="selectAccDetail" resultMap="owner_rm">
		SELECT USER_NAME,ACC_NAME,USER_TEL,USER_EMAIL,USER_BIRTH,ACC_ST_FL,ACC_ADDR,OPEN_DATE,ACC_TEL FROM "ACC"
		JOIN "BOSS" USING(BOSS_NO)
		JOIN "USER" USING(USER_NO)
		WHERE ACC_NO = #{accNo}
	</select>
	
	<!-- total 방 개수 -->
	<select id="selectTotalAccRoom" resultType="_int">
		SELECT COUNT(*) FROM "ACC_GRADE" WHERE ACC_NO = #{accNo}
	</select>
	
	<select id="selectUserStatistics" resultType="map">
		SELECT
    	AGE_GROUP,
    	COUNT(*) AS USER_COUNT,
    	USER_GENDER
		FROM
		    (SELECT
		        CASE
		            WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 0 AND 12 THEN '1'
		            WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 13 AND 18 THEN '2'
		            WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 19 AND 24 THEN '3'
		            WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 25 AND 29 THEN '4'
		            WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 30 AND 34 THEN '5'
		            WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 35 AND 39 THEN '6'
		            WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 40 AND 44 THEN '7'
		            WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 45 AND 49 THEN '8'
		            WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 50 AND 54 THEN '9'
		            WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 55 AND 59 THEN '10'
		            ELSE '60'
		        END AS AGE_GROUP,
		        USER_GENDER
		    FROM
		        "USER")
		GROUP BY
		    AGE_GROUP, USER_GENDER
		ORDER BY
		    AGE_GROUP
	</select>
	
	
	<!-- 전체 예약/구매 건수 (성별) -->
	<select id="selectTotalStatisticsGender" resultType="map">
		SELECT RESERV_TYPE, USER_GENDER,
			ROUND(COUNT(*) / (SELECT COUNT(*) FROM RESERVATION
                WHERE EXTRACT(YEAR FROM PAY_TIME) = #{year}
                AND EXTRACT(MONTH FROM PAY_TIME) = #{month}) * 100 , 1) AS RES_COUNT
		FROM RESERVATION
		JOIN "USER" USING(USER_NO)
		WHERE EXTRACT(YEAR FROM PAY_TIME) = #{year}
		AND EXTRACT(MONTH FROM PAY_TIME) = #{month}
		GROUP BY USER_GENDER, RESERV_TYPE
		ORDER BY RESERV_TYPE
	</select>
	
	<!-- 전체 예약/구매 건수 테이블1 -->
	<select id="selectTotalStatisticsTable" resultType="map">
		SELECT RESERV_TYPE , COUNT(*) AS BUY_COUNT
		FROM RESERVATION
		JOIN "USER" USING(USER_NO)
		WHERE EXTRACT(YEAR FROM PAY_TIME) = #{year}
		AND EXTRACT(MONTH FROM PAY_TIME) = #{month}
		GROUP BY RESERV_TYPE
		ORDER BY RESERV_TYPE
	</select>
	
	<!-- 구매 연도+월 구하기 -->
	<select id="selectPayTime" resultType="map">
		SELECT DISTINCT TO_CHAR(PAY_TIME, 'YYYY"년" MM"월"') AS PAY_TIME
		FROM RESERVATION
		ORDER BY 1 DESC
	</select>
	
	
	<!-- 전체 예약/구매 건수 (나이대별) -->
	<select id="selectTotalStatisticsAge" resultType="map">
		SELECT RESERV_TYPE, AGE_GROUP, COUNT(*) AS BUY_COUNT
			FROM RESERVATION
			JOIN "USER" USING(USER_NO)
			JOIN (SELECT
			    CASE
			        WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 0 AND 19 THEN '1'
			        WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 20 AND 29 THEN '2'
			        WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 30 AND 39 THEN '3'
			        WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 40 AND 49 THEN '4'
			        WHEN TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE(USER_BIRTH,'YYYYMMDD')) / 12) BETWEEN 50 AND 59 THEN '5'
			        ELSE '60'
			    END AS AGE_GROUP
			    , USER_NO
			    FROM
			    "USER") USING(USER_NO)
			WHERE EXTRACT(YEAR FROM PAY_TIME) = #{year}
			AND EXTRACT(MONTH FROM PAY_TIME) = #{month}
			GROUP BY RESERV_TYPE, AGE_GROUP
			ORDER BY RESERV_TYPE
	</select>
	
	
	<!-- 숙소별 통계 -->
	<select id="selectTotalStatisticsAcc" resultType="map">
		SELECT ROWNUM, T.* FROM (SELECT AR.ACC_NO,
		    (SELECT ACC_NAME FROM ACC A WHERE A.ACC_NO = AR.ACC_NO) ACC_NAME, 
		    (SELECT COUNT(*) FROM ACC_RESERVATION R2
		    JOIN RESERVATION USING(RESERVATION_NO)
		    WHERE EXTRACT(YEAR FROM PAY_TIME) = #{year}
		    AND EXTRACT(MONTH FROM PAY_TIME) = #{month} AND R2.ACC_NO = AR.ACC_NO) PRESENT_TIME,
		    (SELECT COUNT(*) FROM ACC_RESERVATION R2
		    JOIN RESERVATION USING(RESERVATION_NO)
		    WHERE EXTRACT(YEAR FROM PAY_TIME) = #{year}
		    AND EXTRACT(MONTH FROM PAY_TIME) = (#{month}-1) AND R2.ACC_NO = AR.ACC_NO) LAST_TIME
		FROM ACC_RESERVATION AR
		JOIN ACC A ON(A.ACC_NO = AR.ACC_NO)
		GROUP BY AR.ACC_NO
		ORDER BY PRESENT_TIME DESC) T
	</select>
	
	<!-- 구매 연도 구하기 -->
	<select id="selectPayYear" resultType="map">
		SELECT DISTINCT TO_CHAR(PAY_TIME, 'YYYY"년"') AS PAY_TIME
		FROM RESERVATION
		ORDER BY 1 DESC
	</select>
	
	<!-- 숙소별 통계 year -->
	<select id="selectTotalStatisticsAccYear" resultType="map">
		SELECT ROWNUM, T.* FROM (SELECT AR.ACC_NO,
		    (SELECT ACC_NAME FROM ACC A WHERE A.ACC_NO = AR.ACC_NO) ACC_NAME, 
		    (SELECT COUNT(*) FROM ACC_RESERVATION R2
		    JOIN RESERVATION USING(RESERVATION_NO)
		    WHERE EXTRACT(YEAR FROM PAY_TIME) = #{year}
		    AND R2.ACC_NO = AR.ACC_NO) PRESENT_TIME,
		    (SELECT COUNT(*) FROM ACC_RESERVATION R2
		    JOIN RESERVATION USING(RESERVATION_NO)
		    WHERE EXTRACT(YEAR FROM PAY_TIME) = (#{year} - 1)
		    AND R2.ACC_NO = AR.ACC_NO) LAST_TIME
		FROM ACC_RESERVATION AR
		JOIN ACC A ON(A.ACC_NO = AR.ACC_NO)
		GROUP BY AR.ACC_NO
		ORDER BY PRESENT_TIME DESC) T
	</select>
	
	
	<!-- 숙소별 성별 이용 비율 (월별) -->
	<select id="selectAccGenderChart3" resultType="map">
		SELECT USER_GENDER,
			ROUND(COUNT(*) / 
                            (SELECT COUNT(*) FROM RESERVATION
                            JOIN "ACC_RESERVATION" USING(RESERVATION_NO)
                            WHERE ACC_NO = #{accNo}
                            AND EXTRACT(YEAR FROM PAY_TIME) = #{year}
                            AND EXTRACT(MONTH FROM PAY_TIME) = #{month} ) 
            * 100 , 1) AS RES_COUNT
		FROM RESERVATION
        JOIN "ACC_RESERVATION" USING(RESERVATION_NO)
		JOIN "USER" USING(USER_NO)
		WHERE EXTRACT(YEAR FROM PAY_TIME) = #{year}
		AND EXTRACT(MONTH FROM PAY_TIME) = #{month}
        AND ACC_NO = #{accNo}
		GROUP BY USER_GENDER
	</select>
	
	<!-- 숙소별 성별 이용 비율 (연도별) -->
	<select id="selectAccGenderChart3Year" resultType="map">
		SELECT USER_GENDER,
			ROUND(COUNT(*) / 
                            (SELECT COUNT(*) FROM RESERVATION
                            JOIN "ACC_RESERVATION" USING(RESERVATION_NO)
                            WHERE ACC_NO = #{accNo}
                            AND EXTRACT(YEAR FROM PAY_TIME) = #{year} ) 
            * 100 , 1) AS RES_COUNT
		FROM RESERVATION
        JOIN "ACC_RESERVATION" USING(RESERVATION_NO)
		JOIN "USER" USING(USER_NO)
		WHERE EXTRACT(YEAR FROM PAY_TIME) = #{year}
        AND ACC_NO = #{accNo}
		GROUP BY USER_GENDER
	</select>
	
	<select id="selectUserTel" resultType="string">
		SELECT USER_TEL FROM "USER" WHERE USER_NO = #{userNo}
	</select>
	
	
	
	
	
</mapper>
