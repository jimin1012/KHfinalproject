<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

	<resultMap type="Board" id="board_rm">

		<id property="boardNo" column="BOARD_NO" />
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="boardCreateDate" column="CREATE_DATE" />
		<result property="readCount" column="READ_COUNT" />
		<result property="boardCode" column="BOARD_CODE" />
		<result property="boardName" column="BOARD_NAME" />

		<result property="pollTitle" column="POLL_TITLE" />
		<result property="pollEndDate" column="POLL_END_DATE" />

		<result property="userNo" column="USER_NO" />
		<result property="userNickname" column="USER_NICKNAME" />
		<result property="profileImage" column="PROFILE_IMG" />

		<result property="likeCount" column="LIKE_COUNT" />
		<!-- 썸네일, 별점 등은 아직 추가 안함 -->


		<!-- 댓글용 collection 태그 -->

		<collection property="commentList"
			select="selectCommentList" column="BOARD_NO"
			javaType="java.util.ArrayList" ofType="Comment">
		</collection>
		
	
		
		
		

		<!-- 축제게시글용 collection 태그 추가 03/15 지선 -->
		<collection property="festival" select="selectFestivalList"
			column="BOARD_NO"
			javaType="com.nxshxw.project.board.model.dto.Festival"
			ofType="Festival">
		</collection>
		
		

	</resultMap>

	<!-- 축제 게시판 -->
	<resultMap type="Festival" id="festival_rm">
		<id property="boardNo" column="BOARD_NO" />
		<result property="festivalStartDate" column="F_START_DATE" />
		<result property="festivalEndtDate" column="F_END_DATE" />
		<result property="festivalAddress" column="F_ADDR" />
		<result property="festivalPrice" column="F_PRICE" />
		<result property="festivalHost" column="F_HOST" />

		<result property="commentStar" column="COMMENT_STAR" />
	</resultMap>

	<!-- 투표게시판 -->
	<resultMap type="Poll" id="Poll_rm">
		<id property="boardNo" column="BOARD_NO" />
		<result property="pollTitle" column="POLL_TITLE" />
		<result property="pollEndDate" column="POLL_END_DATE" />
		<result property="pollSt" column="POLL_ST_FL" />
	</resultMap>
	
	<resultMap type="Option" id="Option_rm">
		<id property="OptionNo" column="OPTION_NO" />
		<result property="OptionContent" column="OPTION_CONTENT" />
		<result property="BoardNo" column="BOARD_NO" />
		<result property="MemberNo" column="USER_NO" />
	</resultMap>
	
	
	<!-- 댓글 -->
	<resultMap type="Comment" id="comment_rm">
		<id property="commentNo" column="COMMENT_NO" />
		<result property="commentContent" column="COMMENT_CONTENT" />
		<result property="commentCreateDate" column="C_CREATE_DATE" />
		<result property="boardNo" column="BOARD_NO" />
		<result property="userNo" column="USER_NO" />
		<result property="commentDeleteFlag" column="COMMENT_DEL_FL" />
		<result property="parentNo" column="PARENT_NO" />
		<result property="userNickName" column="USER_NICKNAME" />
		<result property="profileImage" column="PROFILE_IMG" />
		<result property="commentStar" column="COMMENT_STAR" />
	</resultMap>
	
	




	<!-- 공지사항게시글 작성 작성일 03/14 지민 -->
	<insert id="boardInsert" parameterType="Board"
		useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int"
			keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO "BOARD"
		VALUES(#{boardNo},#{boardTitle},#{boardContent},DEFAULT,DEFAULT,'N',#{boardCode},#{userNo})
	</insert>

	<!-- 이미지 목록 조회 03/14 지민 -->
	<select id="selectBoardImageList" resultType="string">
		SELECT BOARD_CONTENT FROM BOARD
	</select> 


	<!-- 게시판 삭제되지 않은 게시글 수 조회 (검색X) 03/15 지선 -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD
		<!-- 축제 게시판 검색 -->
		<if test='boardCode == 2'>
			JOIN "FESTIVAL" USING(BOARD_NO)
		</if>
		WHERE BOARD_CODE = #{boardCode}
		AND BOARD_DEL_FL = 'N'
		<if test="boardCode == 2">
		      	<![CDATA[
			      	AND F_START_DATE < SYSDATE
					AND F_END_DATE > SYSDATE
		      	]]>
		</if>
	</select>

	<!-- 특정 게시판의 현재 페이지 목록 조회 (검색X) 03/15 지선 -->
	<select id="selectBoardList" resultMap="board_rm">
		SELECT B.BOARD_NO, BOARD_TITLE, BOARD_CONTENT,USER_NICKNAME, READ_COUNT,
		TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
		(SELECT COUNT(*) FROM "COMMENT" C
		WHERE C.BOARD_NO = B.BOARD_NO
		AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
		(SELECT COUNT(*) FROM BOARD_LIKE L
		WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT
		FROM "BOARD" B
		JOIN "USER" USING(USER_NO)

		<!-- 축제 게시판 검색 -->
		<if test='boardCode == 2'>
			JOIN "FESTIVAL" F ON(F.BOARD_NO = B.BOARD_NO)
		</if>
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		<choose> <!-- 축제 게시판 검색 -->
			<when test="boardCode == 2">
		      	<![CDATA[
			      	AND F_START_DATE < SYSDATE
					AND F_END_DATE > SYSDATE
		      	]]>
				ORDER BY F_START_DATE DESC
			</when>
			<otherwise> <!-- 다른 게시판 검색 -->
				ORDER BY BOARD_NO DESC
			</otherwise>
		</choose>

		<!-- ORDER BY BOARD_NO DESC -->
	</select>

	<!-- 게시판 삭제되지 않은 게시글 수 조회 (검색O) 03/15 지선 -->
	<select id="getListCountSearch" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD

		<!-- 작성자 검색 -->
		<if test='key == "w"'>
			JOIN USER USING(USER_NO)
		</if>

		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}

		<choose>
			<when test='key == "t"'>
				<!-- 제목 -->
				AND BOARD_TITLE LIKE '%${query}%'
			</when>
			<when test='key == "c"'>
				<!-- 내용 -->
				AND BOARD_CONTENT LIKE '%${query}%'
			</when>
			<when test='key == "tc"'>
				<!-- 제목+내용 -->
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE
				'%${query}%')
			</when>
			<when test='key == "w"'>
				<!-- 작성자 -->
				AND USER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>
	</select>


	<!-- 특정 게시판의 현재 페이지 목록 조회 (검색O) 03/15 지선 -->
	<select id="selectBoardListSearch" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, USER_NICKNAME, READ_COUNT,
		TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
		(SELECT COUNT(*) FROM "COMMENT" C
		WHERE C.BOARD_NO = B.BOARD_NO
		AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
		(SELECT COUNT(*) FROM BOARD_LIKE L
		WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT
		FROM "BOARD" B
		JOIN "USER" USING(USER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		<choose>
			<when test='key == "t"'>
				<!-- 제목 -->
				AND BOARD_TITLE LIKE '%${query}%'
			</when>
			<when test='key == "c"'>
				<!-- 내용 -->
				AND BOARD_CONTENT LIKE '%${query}%'
			</when>
			<when test='key == "tc"'>
				<!-- 제목+내용 -->
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE
				'%${query}%')
			</when>
			<when test='key == "w"'>
				<!-- 작성자 -->
				AND USER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>
		ORDER BY BOARD_NO DESC
	</select>

	<!-- 게시글 상세 조회 -->
	<select id="selectBoardDetail" resultMap="board_rm">
		SELECT
		BOARD_NO,BOARD_TITLE,BOARD_CONTENT,READ_COUNT,USER_NO,USER_NICKNAME,PROFILE_IMG
		,TO_CHAR(CREATE_DATE, 'YYYY"년"MM"월"DD"일" HH24:MI:SS') AS CREATE_DATE
		,(SELECT COUNT(*) FROM BOARD_LIKE L
		WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT
		FROM "BOARD" B
		JOIN "USER"
		USING(USER_NO)
		WHERE BOARD_CODE = #{boardCode} AND BOARD_NO =
		#{boardNo}
		AND BOARD_DEL_FL = 'N'
	</select>

	<!-- 조회수 증가 -->
	<update id="updateReadCount">
		UPDATE BOARD SET READ_COUNT = READ_COUNT+1 WHERE
		BOARD_NO = #{boardNo}
	</update>


	<!-- 축제 정보 목록 조회 -->
	<select id="selectFestivalList" resultMap="festival_rm">
		SELECT BOARD_NO,
		TO_CHAR(F_START_DATE, 'YYYY.MM.DD') F_START_DATE,
		TO_CHAR(F_END_DATE, 'YYYY.MM.DD') F_END_DATE,
		F_ADDR, F_PRICE, F_HOST,
		( SELECT ROUND(AVG(COMMENT_STAR),1)
		FROM "COMMENT"
		WHERE BOARD_NO = #{boardNo} AND PARENT_NO IS NULL) COMMENT_STAR
		FROM FESTIVAL
		WHERE BOARD_NO =
		#{boardNo}
	</select>

	<!-- 축제 게시판 삭제되지 않은 게시글 수 조회 시기별,지역별 게시글 개수 조회 03/16 지선 -->
	<select id="getFestivalListCountSearch" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD
		JOIN FESTIVAL USING(BOARD_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}

		<!-- 개최중인 경우 -->
		<if test='selectDate == "present" or selectDate == "null"'>
			<if test='selectLocation != "local" and selectLocation != "null"'>
				AND F_ADDR LIKE '%${selectLocation}%'
			</if>
				<![CDATA[
						AND F_START_DATE < SYSDATE
						AND F_END_DATE > SYSDATE
					]]>
		</if>
		<!-- 개최예정인 경우 -->
		<if test='selectDate == "coming"'>
			<if test='selectLocation != "local" and selectLocation != "null"'>
				AND F_ADDR LIKE '%${selectLocation}%'
			</if>
				<![CDATA[	
						AND F_START_DATE > SYSDATE
						AND F_END_DATE > SYSDATE
					]]>
		</if>
		<!-- 월별인 경우 -->
		<if
			test='selectDate != "present" and selectDate != "coming" and selectDate != "null"'>
			<if test='selectLocation != "local"  and selectLocation != "null"'>
				AND F_ADDR LIKE '%${selectLocation}%'
			</if>
					<![CDATA[	
						AND EXTRACT(MONTH FROM F_START_DATE) <= #{selectDate}
						AND EXTRACT(MONTH FROM F_END_DATE) >= #{selectDate}
					]]>
		</if>
	</select>


	<!-- 축제 정보 시기별,지역별 목록 조회 03/16 지선 -->
	<select id="searchFestivalBoardList" resultMap="board_rm">
		SELECT B.BOARD_NO, BOARD_TITLE, BOARD_CONTENT, USER_NICKNAME, READ_COUNT,
		TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
		(SELECT COUNT(*) FROM BOARD_LIKE L
		WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
		( SELECT ROUND(AVG(COMMENT_STAR),1)
		FROM "COMMENT"
		WHERE BOARD_NO = B.BOARD_NO) COMMENT_STAR
		FROM "BOARD" B
		JOIN "USER" USING(USER_NO)
		JOIN "FESTIVAL" F ON(F.BOARD_NO = B.BOARD_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}


		<choose>
			<!-- 개최중인 경우 -->
			<when test='selectDate == "present" or selectDate == "null"'>
				<if test='selectLocation != "local" and selectLocation != "null"'>
					AND F_ADDR LIKE '%${selectLocation}%'
				</if>
				<![CDATA[
						AND F_START_DATE < SYSDATE
						AND F_END_DATE > SYSDATE
					]]>
			</when>
			<!-- 개최 예정인 경우 -->
			<when test='selectDate == "coming"'>
				<if test='selectLocation != "local" and selectLocation != "null"'>
					AND F_ADDR LIKE '%${selectLocation}%'
				</if>
				<![CDATA[	
						AND F_START_DATE > SYSDATE
						AND F_END_DATE > SYSDATE
					]]>
			</when>

			<!-- 월별 선택 -->
			<otherwise>
				<if test='selectLocation != "local" and selectLocation != "null"'>
					AND F_ADDR LIKE '%${selectLocation}%'
				</if>
				<if test='selectDate != "null"'>
					<![CDATA[	
							AND EXTRACT(MONTH FROM F_START_DATE) <= ${selectDate}
							AND EXTRACT(MONTH FROM F_END_DATE) >= ${selectDate}
						]]>
				</if>

			</otherwise>

		</choose>

		<!-- 개최예정 정렬 -->
		<if test='selectDate != "present"'>
			<!-- 별점순 정렬 -->
			<if test='order=="star"'>
				ORDER BY COMMENT_STAR DESC NULLS LAST
			</if>
			<if test='order=="read"'>
				ORDER BY READ_COUNT DESC NULLS LAST
			</if>
			<if test='selectDate == "date"'>
				ORDER BY F_START_DATE
			</if>
		</if>
		<!-- 개최중 정렬 -->
		<if test='selectDate == "present"'>

			<choose>
				<!-- 별점순 정렬 -->
				<when test='order=="star"'>
					ORDER BY COMMENT_STAR DESC NULLS LAST
				</when>

				<when test='order=="read"'>
					ORDER BY READ_COUNT DESC NULLS LAST
				</when>

				<otherwise>
					ORDER BY F_START_DATE DESC
				</otherwise>
			</choose>

		</if>

	</select>


	<!-- 게시글 삭제 -->
	<update id="boardDelete">
		UPDATE "BOARD" SET BOARD_DEL_FL = 'Y' WHERE BOARD_NO
		= #{boardNo} AND BOARD_CODE = #{boardCode}
	</update>

	<!-- 공지사항 게시글 수정 -->
	<update id="boardUpdate">
		UPDATE "BOARD" SET BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT= #{boardContent}
		WHERE BOARD_NO = #{boardNo} AND BOARD_CODE = #{boardCode}
	</update>


	<!-- 투표 게시글 작성 -->
	<insert id="pollInsert" parameterType="Board"
		useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int"
			keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT ALL INTO "BOARD"
		VALUES(#{boardNo},#{boardTitle},#{boardContent},DEFAULT,DEFAULT,'N',#{boardCode},#{userNo})
		INTO "POLL" VALUES(#{boardNo},#{pollTitle},#{pollEndDate},DEFAULT)
		SELECT * FROM DUAL
	</insert>

	<!-- 선택지 삽입 -->

	<insert id="optionInsert" parameterType="Board">
		INSERT INTO "OPTION"
		VALUES(SEQ_OPTION_NO.NEXTVAL,#{optionContent},#{boardNo})
	</insert>
	
	<!-- 투표조회 -->
	
	<select id="selectPoll" resultMap="Poll_rm" >
		SELECT *
		FROM "POLL"  
		WHERE BOARD_NO = #{boardNo}
	</select>
	<!-- 선택지 조회 -->
	<select id="selectOption" resultMap="Option_rm" >
		SELECT *
		FROM "OPTION"  
		WHERE BOARD_NO = #{boardNo}
		ORDER BY 1
	</select>
	
	<!-- 투표 중복 조회 -->
	<select id="voteCheck" resultType="_int">
		SELECT COUNT(*)
		FROM (SELECT *
		FROM "VOTE"
		JOIN "OPTION" USING (OPTION_NO)) 
		WHERE USER_NO = #{memberNo} 
		AND BOARD_NO = #{boardNo}
	</select>
	
	<!-- 투표결과 insert -->
	<insert id="voteInsert">
		INSERT INTO "VOTE" 
		VALUES(#{memberNo},#{optionNo})
	</insert>
	
	<!-- 축제정보 업로드(insert) -->
	<insert id="festivalInsert">
		INSERT INTO "FESTIVAL" VALUES(#{boardNo},#{festivalStartDate},#{festivalEndtDate},#{festivalAddress},#{festivalPrice},#{festivalHost})
	</insert>
	
	<!-- 축제정보 update -->
	<update id="festivalUpdate">
		UPDATE "FESTIVAL" SET F_START_DATE = #{festivalStartDate},F_END_DATE=#{festivalEndtDate},F_ADDR = #{festivalAddress},F_PRICE=#{festivalPrice},F_HOST = #{festivalHost} 
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	
	<!-- 좋아요 여부 확인 -->
	<select id="boardLikeCheck" resultType="_int">
		SELECT COUNT(*) FROM
		BOARD_LIKE
		WHERE BOARD_NO = #{boardNo}
		AND USER_NO = #{userNo}
	</select>
	
	<!-- 좋아요 삽입 -->
	<insert id="insertBoardLike">
		INSERT INTO BOARD_LIKE
		VALUES (#{userNo}
		,#{boardNo})
	</insert>

	<!-- 좋아요 삭제 -->
	<delete id="deleteBoardLike">
		DELETE FROM BOARD_LIKE
		WHERE BOARD_NO = #{boardNo}
		AND
		USER_NO = #{userNo}
	</delete>

	<!-- 좋아요 개수 조회 -->
	<select id="countBoardLike" resultType="_int">
		SELECT COUNT(*) FROM
		BOARD_LIKE
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	
	<!-- 댓글 목록 조히 -->
	<select id="selectCommentList" resultMap="comment_rm">
		SELECT LEVEL, C.* FROM
		(SELECT COMMENT_NO, COMMENT_CONTENT,
		TO_CHAR(C_CREATE_DATE, 'YY"년"
		MM"월" DD"일" HH24"시" MI"분"  ') C_CREATE_DATE
		, BOARD_NO, USER_NO,
		USER_NICKNAME, PROFILE_IMG, PARENT_NO,COMMENT_STAR,
		COMMENT_DEL_FL
		FROM "COMMENT"
		JOIN "USER" USING (USER_NO)
		WHERE BOARD_NO = ${boardNo} ) C
		WHERE
		COMMENT_DEL_FL = 'N'
		START WITH PARENT_NO IS NULL
		CONNECT BY PRIOR
		COMMENT_NO = PARENT_NO
		ORDER SIBLINGS BY COMMENT_NO
	</select>
	
	<select id="commentCount" resultType="_int"  parameterType="_int">
		SELECT COUNT(COMMENT_NO)
		FROM "COMMENT" 
		JOIN BOARD USING(BOARD_NO)
		WHERE BOARD_NO = #{boardNo}
		AND COMMENT_DEL_FL = 'N'
	</select>
	
	<!-- 선택지 Count -->
	<select id="optionCount" resultType="_int" parameterType="_int">
		SELECT COUNT(*)
		FROM "VOTE"
        WHERE  OPTION_NO = #{optionNo}
	</select>
	
	<!-- 검색창 -->
	<select id="autoSearchMain" resultMap="board_rm">
		SELECT BOARD_TITLE, BOARD_NAME, BOARD_CODE, BOARD_NO 
		      FROM BOARD 
		      JOIN BOARD_TYPE USING(BOARD_CODE)
		      WHERE BOARD_TITLE LIKE '%${input}%'
		      AND BOARD_DEL_FL ='N'
	</select>
	
	<!-- 인기 축제 게시글 (메인 페이지) -->
	<select id="getFestivalPosts" resultMap="board_rm">
      SELECT B.BOARD_NO, BOARD_TITLE, BOARD_CONTENT,USER_NICKNAME, READ_COUNT,
		TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
		(SELECT COUNT(*) FROM "COMMENT" C
		WHERE C.BOARD_NO = B.BOARD_NO
		AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
		(SELECT COUNT(*) FROM BOARD_LIKE L
		WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT
		FROM "BOARD" B
		JOIN "USER" USING(USER_NO)
		WHERE BOARD_CODE = 2
		AND BOARD_DEL_FL ='N'
   
   </select>
   
   <!-- 인기 투표 게시글 (메인 페이지) -->
   <select id="getPollPosts" resultMap="board_rm">
      SELECT B.BOARD_NO, BOARD_TITLE, BOARD_CONTENT,USER_NICKNAME, READ_COUNT,
		TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
		(SELECT COUNT(*) FROM "COMMENT" C
		WHERE C.BOARD_NO = B.BOARD_NO
		AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
		(SELECT COUNT(*) FROM BOARD_LIKE L
		WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT
		FROM "BOARD" B
		JOIN "USER" USING(USER_NO)
		 WHERE BOARD_CODE = 3
   </select>
	
	<!-- /////////////////////////////////////////////////////////////////////////////////// -->
	
	<select id="listCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD

		WHERE BOARD_DEL_FL = 'N'
		
		<!-- 제목 -->
		AND BOARD_TITLE LIKE '%${query}%'
			
	</select>
	
	
	
	<select id="searchAllBoards" resultMap="board_rm">
		SELECT *
		FROM "BOARD"
		JOIN BOARD_TYPE USING(BOARD_CODE)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_TITLE LIKE '%${query}%'
		
	 </select>
</mapper>
